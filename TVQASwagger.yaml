openapi: 3.0.3
info:
  title: Order API
  description: |-
    Challenge for QA Candidate
  version: 1.0.0
servers:
  - url: https://tv.test.io/api/v1
tags:
  - name: product
    description: Product
  - name: order
    description: Order
paths:
  /product:
    get:
      tags:
        - product
      summary: Get all a list of all products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - product
      summary: Create a new product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [name, price]
              properties:
                name:
                  type: string
                  pattern: ^[A-Z]+$
                  example: TSHIRT
                description:
                  type: string
                  maxLength: 30
                  example: Product description
                price:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  example: 10
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
  /product/{id}:
    get:
      tags:
        - product
      summary: Get product by id
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      tags:
        - product
      summary: Update product by id
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  pattern: ^[A-Z]+$
                  example: TSHIRT
                description:
                  type: string
                  maxLength: 30
                  example: Product description
                price:
                  type: number
                  minimum: 0
                  exclusiveMinimum: true
                  example: 10
      responses:
        '200':
          description: Successfully updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      tags:
        - product
      summary: Delete product by id
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Visitor not found
  
  /order:
    get:
      tags:
        - order
      summary: Returns a list of all order
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
        - order
      summary: Create an order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                  pattern: ^([A-ZÀ-ÿ][-,a-z. ']+[ ]*)+$
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        format: int64
                        example: 111
                      quantity:
                        type: number
                        minimum: 0
                        exclusiveMinimum: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
  /order/{id}:
    get:
      tags:
        - order
      summary: Return an order by id
      parameters:
        - name: id
          in: path
          description: ID of order
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Invalid input
    put:
      tags:
        - order
      summary: Update order by id
      parameters:
        - name: id
          in: path
          description: ID of order
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                  pattern: ^([A-ZÀ-ÿ][-,a-z. ']+[ ]*)+$
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        format: int64
                        example: 111
                      quantity:
                        type: number
                        minimum: 0
                        exclusiveMinimum: true
      responses:
        '200':
          description: Successfully updated order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags:
        - order
      summary: Delete order by id
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Order not found

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 11
        name:
          type: string
          pattern: ^[A-Z]+$
          example: TSHIRT
        description:
          type: string
          maxLength: 30
          example: Product description
        price:
          type: number
          minimum: 0
          exclusiveMinimum: true
          example: 10
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10000
        time:
          type: string
          format: date-time
        name:
          type: string
          example: John Doe
          pattern: ^([A-ZÀ-ÿ][-,a-z. ']+[ ]*)+$
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: integer
                format: int64
                example: 111
              quantity:
                type: number
                minimum: 0
                exclusiveMinimum: true
        subtotal:
          type: number
          example: 45.10
